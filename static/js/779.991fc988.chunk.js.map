{"version":3,"file":"static/js/779.991fc988.chunk.js","mappings":"yMAEaA,EAAYC,EAAAA,EAAAA,IAAH,iEAITC,EAAcD,EAAAA,EAAAA,GAAH,0EAKXE,EAAcF,EAAAA,EAAAA,GAAH,sCAGXG,EAAeH,EAAAA,EAAAA,GAAH,8DAIZI,EAAcJ,EAAAA,EAAAA,EAAH,sC,SCuBxB,EA9BgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAf,GACxC,GAAE,CAACR,IAECG,EAEkB,IAAnBA,EAAQM,OACH,4CAIP,+BACE,SAACf,EAAD,WACE,SAACE,EAAD,UACGO,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAChB,EAAD,YACE,SAACC,EAAD,UAAec,KACf,SAACb,EAAD,UAAcc,MAFEF,EADP,UAVA,IAoBtB,C,8LCtCKG,EAAW,mCAEjBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,uGAEfD,EAAAA,GAAAA,IAAA,sCACyBD,IACnCP,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,IAJmB,8EAMtB,IAAIC,MAAJ,MANsB,wDAAH,qDAUhBC,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBN,EAAAA,GAAAA,IAAA,gCACmBD,EADnB,iCACoDO,IAC9Dd,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,IAJoB,8EAMvB,IAAIC,MAAJ,MANuB,wDAAH,sDASjBG,EAAoB,mCAAG,WAAMtB,GAAN,0FAEnBe,EAAAA,GAAAA,IAAA,iBACIf,EADJ,oBACuBc,EADvB,oBAEVP,MAAK,SAAAU,GAAC,OAAIA,EAAET,IAAN,IAJuB,8EAM1B,IAAIW,MAAJ,MAN0B,wDAAH,sDASpBI,EAAoB,mCAAG,WAAMvB,GAAN,0FAEnBe,EAAAA,GAAAA,IAAA,iBACIf,EADJ,4BAC+Bc,EAD/B,oBAEVP,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKgB,IAAX,IAJuB,8EAM1B,IAAIL,MAAJ,MAN0B,wDAAH,sDAUpBb,EAAoB,mCAAG,WAAMN,GAAN,0FAEnBe,EAAAA,GAAAA,IAAA,iBAECf,EAFD,4BAE4Bc,EAF5B,2BAIVP,MAAK,SAAAU,GAAC,OAAIA,EAAET,KAAKU,OAAX,IANuB,8EAQ1B,IAAIC,MAAJ,MAR0B,wDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","utils/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 20px 30px;\n`;\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nexport const ReviewsItem = styled.li`\n  margin: 0;\n`;\nexport const ReviewsTitle = styled.h3`\n  margin: 0;\n  margin-bottom: 10px;\n`;\nexport const ReviewsText = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchGetMovieReviews } from '../../utils/fetchMovies.js';\nimport {\n  Container,\n  ReviewsList,\n  ReviewsItem,\n  ReviewsTitle,\n  ReviewsText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieReviews(movieId).then(data => setReviews(data));\n  }, [movieId]);\n\n  if (!reviews) return null;\n\n  if (reviews.length === 0) {\n    return 'We don`t have any revlews for this movie';\n  }\n\n  return (\n    <>\n      <Container>\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewsItem key={id}>\n              <ReviewsTitle>{author}</ReviewsTitle>\n              <ReviewsText>{content}</ReviewsText>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      </Container>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API__KEY = '2a9369ec86027d03e58d7a41eb0edc95';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchGetTrending = async () => {\n  try {\n    return await axios\n      .get(`/trending/movie/day?api_key=${API__KEY}`)\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    return await axios\n      .get(`/search/movie?api_key=${API__KEY}&language=en-US&query=${query}`)\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const fetchGetMovieDetails = async movieId => {\n  try {\n    return await axios\n      .get(`/movie/${movieId}?api_key=${API__KEY}&language=en-US`)\n      .then(r => r.data);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const fetchGetMovieCredits = async movieId => {\n  try {\n    return await axios\n      .get(`/movie/${movieId}/credits?api_key=${API__KEY}&language=en-US`)\n      .then(r => r.data.cast);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchGetMovieReviews = async movieId => {\n  try {\n    return await axios\n      .get(\n        `/movie/${movieId}/reviews?api_key=${API__KEY}&language=en-US&page=1`\n      )\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n"],"names":["Container","styled","ReviewsList","ReviewsItem","ReviewsTitle","ReviewsText","movieId","useParams","useState","reviews","setReviews","useEffect","fetchGetMovieReviews","then","data","length","map","id","author","content","API__KEY","axios","fetchGetTrending","r","results","Error","fetchSearchMovies","query","fetchGetMovieDetails","fetchGetMovieCredits","cast"],"sourceRoot":""}