{"version":3,"file":"static/js/375.5d18e15a.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","utils/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const Container = styled.div`\n  padding: 30px;\n  display: flex;\n  box-shadow: 3px 2px 2px 3px #e9e3e3;\n  margin-top: 10px;\n`;\nexport const BackLink = styled(NavLink)`\n  font-size: 24px;\n  color: black;\n  font-weight: bolder;\n  :hover {\n    color: pink;\n  }\n`;\nexport const InformationContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 30px;\n`;\nexport const Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\nexport const Text = styled.p`\n  margin: 0;\n`;\nexport const SecondTitle = styled.h3`\n  margin: 10px 0;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nexport const Items = styled.li`\n  margin-bottom: 5px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\nexport const AdditionalContent = styled.div`\n  margin: 0;\n  box-shadow: 3px 2px 2px 3px #e9e3e3;\n  padding: 0 30px;\n`;\nexport const AdditionalItem = styled.li`\n  margin-bottom: 5px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\nexport const AdditionalList = styled.ul`\n  margin: 0;\n`;\nexport const Content = styled.div``;\nexport const Link = styled(NavLink)`\n  color: blue;\n  font-family: inherit;\n  font-size: 18px;\n  &.active {\n    background-color: pink;\n    color: white;\n    border-radius: 4px;\n    padding: 3px;\n    text-decoration: none;\n  }\n`;\nexport const Img = styled.img`\n  min-width: 320px;\n  max-height: 360px;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchGetMovieDetails } from '../../utils/fetchMovies.js';\nimport {\n  Container,\n  InformationContent,\n  Link,\n  Img,\n  Title,\n  Text,\n  BackLink,\n  SecondTitle,\n  List,\n  Items,\n  AdditionalContent,\n  AdditionalItem,\n  AdditionalList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchGetMovieDetails(movieId).then(data => setMovieDetails(data));\n  }, [movieId]);\n\n  if (!movieDetails) return null;\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  return (\n    <>\n      <BackLink type=\"button\" to={location.state?.from ?? '/movies'}>\n        &#10508; Go Back\n      </BackLink>\n      <Container>\n        <Img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'Not Img'\n          }\n          alt={title}\n        />\n        <InformationContent>\n          <Title>{title}</Title>\n          <Text>User Score: {vote_average * 10}%</Text>\n          <SecondTitle>Overview</SecondTitle>\n          <Text>{overview}</Text>\n          <SecondTitle>Genres</SecondTitle>\n          <List>\n            {genres.map(({ name, id }) => (\n              <Items key={id}>{name}</Items>\n            ))}\n          </List>\n        </InformationContent>\n      </Container>\n      <AdditionalContent>\n        <SecondTitle>Additional Information</SecondTitle>\n        <AdditionalList>\n          <AdditionalItem>\n            <Link to=\"cast\" state={{ from: location.state?.from ?? '/movies' }}>\n              Cast\n            </Link>\n          </AdditionalItem>\n          <AdditionalItem>\n            <Link\n              to=\"reviews\"\n              state={{ from: location.state?.from ?? '/movies' }}\n            >\n              Reviews\n            </Link>\n          </AdditionalItem>\n        </AdditionalList>\n      </AdditionalContent>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API__KEY = '2a9369ec86027d03e58d7a41eb0edc95';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchGetTrending = async () => {\n  try {\n    return await axios\n      .get(`/trending/movie/day?api_key=${API__KEY}`)\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    return await axios\n      .get(`/search/movie?api_key=${API__KEY}&language=en-US&query=${query}`)\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const fetchGetMovieDetails = async movieId => {\n  try {\n    return await axios\n      .get(`/movie/${movieId}?api_key=${API__KEY}&language=en-US`)\n      .then(r => r.data);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const fetchGetMovieCredits = async movieId => {\n  try {\n    return await axios\n      .get(`/movie/${movieId}/credits?api_key=${API__KEY}&language=en-US`)\n      .then(r => r.data.cast);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchGetMovieReviews = async movieId => {\n  try {\n    return await axios\n      .get(\n        `/movie/${movieId}/reviews?api_key=${API__KEY}&language=en-US&page=1`\n      )\n      .then(r => r.data.results);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n"],"names":["Container","styled","BackLink","NavLink","InformationContent","Title","Text","SecondTitle","List","Items","AdditionalContent","AdditionalItem","AdditionalList","Link","Img","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","fetchGetMovieDetails","then","data","poster_path","title","vote_average","overview","genres","type","to","state","from","src","alt","map","name","id","API__KEY","axios","fetchGetTrending","r","results","Error","fetchSearchMovies","query","fetchGetMovieCredits","cast","fetchGetMovieReviews"],"sourceRoot":""}